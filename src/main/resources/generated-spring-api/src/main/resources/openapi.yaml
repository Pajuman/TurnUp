openapi: 3.0.0
info:
  title: Word API
  version: 1.0.0
servers:
- url: /api
tags:
- description: Users own Lessons
  name: User
- description: Lessons own Words
  name: Lesson
- description: Words are lowest entities
  name: Word
paths:
  /users:
    delete:
      operationId: deleteUser
      parameters:
      - explode: false
        in: header
        name: X-User-Id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: User deleted
        "400":
          description: Invalid input
        "401":
          description: User ID is not recognized
      summary: Delete a user
      tags:
      - User
      x-accepts:
      - application/json
      x-tags:
      - tag: User
    post:
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserDTO'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                format: uuid
                type: string
          description: User created
        "400":
          description: Invalid input
        "409":
          description: User name already exists
      summary: Create a user
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: User
    put:
      operationId: updateUser
      parameters:
      - explode: false
        in: header
        name: X-User-Id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserDTO'
        required: true
      responses:
        "201":
          description: User updated
        "400":
          description: Invalid input
        "401":
          description: User ID is not recognized
        "409":
          description: User name already exists
      summary: Update a user
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: User
  /users/login:
    post:
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserDTO'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                format: uuid
                type: string
          description: User logged in
        "400":
          description: Invalid input
        "401":
          description: User ID is not recognized
      summary: Login a user
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: User
  /users/me/lessons:
    get:
      operationId: getLessonsOfLoggedInUser
      parameters:
      - explode: false
        in: header
        name: X-User-Id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LessonDTO'
                type: array
          description: Lessons of logged in user
        "400":
          description: Invalid input
        "401":
          description: User ID is not recognized
        "404":
          description: No lessons found for user
      summary: Get all lessons of logged in user
      tags:
      - User
      x-accepts:
      - application/json
      x-tags:
      - tag: User
  /lessons:
    post:
      operationId: createLesson
      parameters:
      - explode: false
        in: header
        name: X-User-Id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewLessonDTO'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonDTO'
          description: Lesson created
        "400":
          description: Invalid input
        "401":
          description: User ID is not recognized
        "409":
          description: Lesson name already exists
      summary: Create a new lesson
      tags:
      - Lesson
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: Lesson
    put:
      operationId: updateLesson
      parameters:
      - explode: false
        in: header
        name: X-User-Id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonDTO'
        required: true
      responses:
        "201":
          description: Lesson updated
        "400":
          description: Invalid input
        "401":
          description: User ID is not recognized
        "409":
          description: Lesson name already exists
      summary: Update a lesson
      tags:
      - Lesson
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: Lesson
  /lessons/{lessonId}:
    delete:
      operationId: deleteLesson
      parameters:
      - explode: false
        in: header
        name: X-User-Id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: lessonId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Lesson deleted
        "400":
          description: Invalid input
        "401":
          description: User ID is not recognized
        "403":
          description: Unauthorized access to lesson
      summary: Delete a lesson
      tags:
      - Lesson
      x-accepts:
      - application/json
      x-tags:
      - tag: Lesson
  /lessons/{lessonId}/copy:
    post:
      operationId: copySharedLesson
      parameters:
      - explode: false
        in: header
        name: X-User-Id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: lessonId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonDTO'
          description: Lesson copied
        "400":
          description: Invalid input
        "401":
          description: User ID is not recognized
        "403":
          description: Unauthorized access to lesson
      summary: Copy a shared lesson
      tags:
      - Lesson
      x-accepts:
      - application/json
      x-tags:
      - tag: Lesson
  /lessons/{lessonId}/words:
    get:
      operationId: getWordsByLessonId
      parameters:
      - explode: false
        in: header
        name: X-User-Id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: lessonId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WordDTO'
                type: array
          description: Words of the lesson
        "400":
          description: Invalid input
        "401":
          description: User ID is not recognized
        "403":
          description: Unauthorized access to lesson
        "404":
          description: Lesson not found
      summary: Get all words of a lesson
      tags:
      - Lesson
      x-accepts:
      - application/json
      x-tags:
      - tag: Lesson
    post:
      operationId: createWords
      parameters:
      - explode: false
        in: header
        name: X-User-Id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: lessonId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/NewWordDTO'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WordDTO'
                type: array
          description: Words created
        "400":
          description: Invalid input
        "401":
          description: User ID is not recognized
        "403":
          description: Unauthorized access to lesson
      summary: Create new words in a lesson
      tags:
      - Lesson
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: Lesson
  /words:
    put:
      operationId: updateWords
      parameters:
      - explode: false
        in: header
        name: X-User-Id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchWordUpdateDTO'
        required: true
      responses:
        "204":
          description: All words successfully updated and/or deleted
        "400":
          description: Invalid input
        "401":
          description: User ID is not recognized
        "403":
          description: Unauthorized access to words
      summary: Update and/or delete words
      tags:
      - Word
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: Word
components:
  parameters:
    UserIdHeader:
      explode: false
      in: header
      name: X-User-Id
      required: true
      schema:
        format: uuid
        type: string
      style: simple
  schemas:
    WordDTO:
      example:
        score: 0
        question: 1 black dog
        answer: 1 černý pes
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        question:
          example: 1 black dog
          maxLength: 40
          minLength: 1
          pattern: "^[\\p{L}0-9 ]+$"
          type: string
        answer:
          example: 1 černý pes
          maxLength: 40
          minLength: 1
          pattern: "^[\\p{L}0-9 ]+$"
          type: string
        score:
          type: integer
      required:
      - answer
      - id
      - question
      - score
      type: object
    NewWordDTO:
      example:
        question: 1 black dog
        answer: 1 černý pes
      properties:
        question:
          example: 1 black dog
          maxLength: 40
          minLength: 1
          pattern: "^[\\p{L}0-9 ]+$"
          type: string
        answer:
          example: 1 černý pes
          maxLength: 40
          minLength: 1
          pattern: "^[\\p{L}0-9 ]+$"
          type: string
      required:
      - answer
      - question
      type: object
    BatchWordUpdateDTO:
      example:
        updatedWords:
        - score: 0
          question: 1 black dog
          answer: 1 černý pes
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - score: 0
          question: 1 black dog
          answer: 1 černý pes
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deletedWordIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        updatedWords:
          items:
            $ref: '#/components/schemas/WordDTO'
          type: array
        deletedWordIds:
          items:
            format: uuid
            type: string
          type: array
      type: object
    LessonDTO:
      example:
        shared: true
        description: V lekci jsou běžná podstatná jména
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        lessonName: Podstatná jména
      properties:
        id:
          format: uuid
          type: string
        lessonName:
          example: Podstatná jména
          maxLength: 30
          minLength: 3
          pattern: "^[\\p{L}0-9 ]+$"
          type: string
        description:
          example: V lekci jsou běžná podstatná jména
          maxLength: 60
          minLength: 3
          pattern: "^[\\p{L}0-9 ]+$"
          type: string
        shared:
          type: boolean
      required:
      - description
      - id
      - lessonName
      - shared
      type: object
    NewLessonDTO:
      example:
        shared: true
        description: V lekci jsou běžná podstatná jména
        lessonName: Podstatná jména
      properties:
        lessonName:
          example: Podstatná jména
          maxLength: 30
          minLength: 3
          pattern: "^[\\p{L}0-9 ]+$"
          type: string
        description:
          example: V lekci jsou běžná podstatná jména
          maxLength: 60
          minLength: 3
          pattern: "^[\\p{L}0-9 ]+$"
          type: string
        shared:
          type: boolean
      required:
      - description
      - lessonName
      - shared
      type: object
    AppUserDTO:
      example:
        appUserName: john_doe
        passwordHash: P@ssw0rd123
      properties:
        appUserName:
          example: john_doe
          maxLength: 20
          minLength: 3
          pattern: "^[a-zA-Z0-9_]+$"
          type: string
        passwordHash:
          example: P@ssw0rd123
          maxLength: 16
          minLength: 8
          pattern: "^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d@$!%*?&]+$"
          type: string
      required:
      - appUserName
      - passwordHash
      type: object
