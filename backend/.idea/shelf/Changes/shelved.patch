Index: target/generated-sources/annotations/com/learn/turnup/mappers/WordMapperImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.learn.turnup.mappers;\r\n\r\nimport com.learn.turnup.dto.NewWordDTO;\r\nimport com.learn.turnup.dto.WordDTO;\r\nimport com.learn.turnup.entities.Word;\r\nimport javax.annotation.processing.Generated;\r\nimport org.springframework.stereotype.Component;\r\n\r\n@Generated(\r\n    value = \"org.mapstruct.ap.MappingProcessor\",\r\n    date = \"2025-07-11T07:49:17+0200\",\r\n    comments = \"version: 1.5.5.Final, compiler: javac, environment: Java 21.0.7 (Microsoft)\"\r\n)\r\n@Component\r\npublic class WordMapperImpl implements WordMapper {\r\n\r\n    @Override\r\n    public Word toEntity(NewWordDTO newWordDto) {\r\n        if ( newWordDto == null ) {\r\n            return null;\r\n        }\r\n\r\n        Word word = new Word();\r\n\r\n        word.setQuestion( newWordDto.getQuestion() );\r\n        word.setAnswer( newWordDto.getAnswer() );\r\n\r\n        return word;\r\n    }\r\n\r\n    @Override\r\n    public WordDTO toDto(Word word) {\r\n        if ( word == null ) {\r\n            return null;\r\n        }\r\n\r\n        WordDTO wordDTO = new WordDTO();\r\n\r\n        wordDTO.setId( word.getId() );\r\n        wordDTO.setQuestion( word.getQuestion() );\r\n        wordDTO.setAnswer( word.getAnswer() );\r\n        if ( word.getScore() != null ) {\r\n            wordDTO.setScore( word.getScore().intValue() );\r\n        }\r\n\r\n        return wordDTO;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/generated-sources/annotations/com/learn/turnup/mappers/WordMapperImpl.java b/target/generated-sources/annotations/com/learn/turnup/mappers/WordMapperImpl.java
--- a/target/generated-sources/annotations/com/learn/turnup/mappers/WordMapperImpl.java	(revision 25567ea48277a194712b0830e313626b9290b813)
+++ b/target/generated-sources/annotations/com/learn/turnup/mappers/WordMapperImpl.java	(date 1752222952290)
@@ -8,7 +8,7 @@
 
 @Generated(
     value = "org.mapstruct.ap.MappingProcessor",
-    date = "2025-07-11T07:49:17+0200",
+    date = "2025-07-11T10:35:52+0200",
     comments = "version: 1.5.5.Final, compiler: javac, environment: Java 21.0.7 (Microsoft)"
 )
 @Component
Index: target/classes/application-production.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Server port (Railway usually expects 8080)\r\nserver.port=8080\r\n\r\n# App name (optional but good for logs)\r\nspring.application.name=turnup\r\n\r\n# Log level (optional)\r\nlogging.level.root=INFO\r\n\r\n# H2 in-memory DB config\r\nspring.datasource.url=jdbc:h2:mem:testdb\r\nspring.datasource.driver-class-name=org.h2.Driver\r\nspring.datasource.username=sa\r\nspring.datasource.password=\r\n\r\n# Hibernate settings\r\nspring.jpa.database-platform=org.hibernate.dialect.H2Dialect\r\nspring.jpa.hibernate.ddl-auto=create-drop\r\nspring.jpa.show-sql=false
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/target/classes/application-production.properties b/target/classes/application-production.properties
--- a/target/classes/application-production.properties	(revision 25567ea48277a194712b0830e313626b9290b813)
+++ b/target/classes/application-production.properties	(date 1752222949245)
@@ -7,13 +7,9 @@
 # Log level (optional)
 logging.level.root=INFO
 
-# H2 in-memory DB config
-spring.datasource.url=jdbc:h2:mem:testdb
-spring.datasource.driver-class-name=org.h2.Driver
-spring.datasource.username=sa
-spring.datasource.password=
-
-# Hibernate settings
-spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
-spring.jpa.hibernate.ddl-auto=create-drop
-spring.jpa.show-sql=false
\ No newline at end of file
+spring.datasource.url=jdbc:postgresql://aws-0-eu-north-1.pooler.supabase.com:6543/postgres?user=postgres.zfkiigokknuyncvlfjia&password=MeyFCm4AjIkY10GQ
+spring.datasource.username=postgres
+spring.datasource.password=MeyFCm4AjIkY10GQ
+spring.datasource.driver-class-name=org.postgresql.Driver
+spring.jpa.hibernate.ddl-auto=update
+spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\t<parent>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\r\n\t\t<version>3.5.0</version>\r\n\t\t<relativePath/> <!-- lookup parent from repository -->\r\n\t</parent>\r\n\t<groupId>com.learn</groupId>\r\n\t<artifactId>turnup</artifactId>\r\n\t<version>0.0.1-SNAPSHOT</version>\r\n\t<name>turnup</name>\r\n\t<description>turnup</description>\r\n\t<url/>\r\n\t<licenses>\r\n\t\t<license/>\r\n\t</licenses>\r\n\t<developers>\r\n\t\t<developer/>\r\n\t</developers>\r\n\t<scm>\r\n\t\t<connection/>\r\n\t\t<developerConnection/>\r\n\t\t<tag/>\r\n\t\t<url/>\r\n\t</scm>\r\n\t<properties>\r\n\t\t<java.version>17</java.version>\r\n\t</properties>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.h2database</groupId>\r\n\t\t\t<artifactId>h2</artifactId>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>jakarta.validation</groupId>\r\n\t\t\t<artifactId>jakarta.validation-api</artifactId>\r\n\t\t\t<version>3.0.2</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-validation</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.mapstruct</groupId>\r\n\t\t\t<artifactId>mapstruct</artifactId>\r\n\t\t\t<version>1.5.5.Final</version>\r\n      <scope>provided</scope>\r\n    </dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.swagger.core.v3</groupId>\r\n\t\t\t<artifactId>swagger-annotations</artifactId>\r\n\t\t\t<version>2.2.15</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.openapitools</groupId>\r\n\t\t\t<artifactId>jackson-databind-nullable</artifactId>\r\n\t\t\t<version>0.2.6</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.postgresql</groupId>\r\n\t\t\t<artifactId>postgresql</artifactId>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.projectlombok</groupId>\r\n\t\t\t<artifactId>lombok</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\r\n\t</dependencies>\r\n\r\n\t<build>\r\n\t\t<plugins>\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\r\n\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\r\n\t\t\t\t<configuration>\r\n          <source>21</source>\r\n          <target>21</target>\r\n\t\t\t\t\t<annotationProcessorPaths>\r\n\t\t\t\t\t\t<path>\r\n              <groupId>org.projectlombok</groupId>\r\n              <artifactId>lombok</artifactId>\r\n              <version>1.18.30</version>\r\n            </path>\r\n            <path>\r\n              <groupId>org.mapstruct</groupId>\r\n              <artifactId>mapstruct-processor</artifactId>\r\n              <version>1.5.5.Final</version>\r\n            </path>\r\n          </annotationProcessorPaths>\r\n\t\t\t\t</configuration>\r\n\t\t\t</plugin>\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\r\n\t\t\t\t<configuration>\r\n\t\t\t\t\t<excludes>\r\n\t\t\t\t\t\t<exclude>\r\n\t\t\t\t\t\t</exclude>\r\n\t\t\t\t\t</excludes>\r\n\t\t\t\t</configuration>\r\n\t\t\t</plugin>\r\n\t\t</plugins>\r\n\t</build>\r\n\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision 25567ea48277a194712b0830e313626b9290b813)
+++ b/pom.xml	(date 1752222405318)
@@ -83,7 +83,10 @@
 			<artifactId>spring-boot-starter-test</artifactId>
 			<scope>test</scope>
 		</dependency>
-
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-starter-security</artifactId>
+		</dependency>
 	</dependencies>
 
 	<build>
Index: src/main/java/com/learn/turnup/repositories/AppUserRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.learn.turnup.repositories;\r\n\r\nimport com.learn.turnup.entities.AppUser;\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\n\r\nimport java.util.Optional;\r\nimport java.util.UUID;\r\n\r\npublic interface AppUserRepository extends JpaRepository<AppUser, UUID> {\r\n    Optional<AppUser> findByAppUserNameAndPasswordHash(String username, String password);\r\n    Boolean existsByAppUserName(String username);\r\n    Optional<AppUser> findByAppUserName(String username);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/learn/turnup/repositories/AppUserRepository.java b/src/main/java/com/learn/turnup/repositories/AppUserRepository.java
--- a/src/main/java/com/learn/turnup/repositories/AppUserRepository.java	(revision 25567ea48277a194712b0830e313626b9290b813)
+++ b/src/main/java/com/learn/turnup/repositories/AppUserRepository.java	(date 1752222721523)
@@ -7,7 +7,6 @@
 import java.util.UUID;
 
 public interface AppUserRepository extends JpaRepository<AppUser, UUID> {
-    Optional<AppUser> findByAppUserNameAndPasswordHash(String username, String password);
     Boolean existsByAppUserName(String username);
     Optional<AppUser> findByAppUserName(String username);
 }
Index: target/classes/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring.application.name=turnup\r\nspring.datasource.url=jdbc:postgresql://localhost:5432/turnup\r\nspring.datasource.username=postgres\r\nspring.datasource.password=password\r\nspring.jpa.hibernate.ddl-auto=update\r\nspring.jpa.show-sql=true\r\nspring.jpa.properties.hibernate.format_sql=true\r\nserver.port=${PORT:8080}\r\nlogging.level.root=INFO\r\nlogging.level.org.springframework=INFO\r\nlogging.level.com.yourpackage=DEBUG\r\nlogging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/target/classes/application.properties b/target/classes/application.properties
--- a/target/classes/application.properties	(revision 25567ea48277a194712b0830e313626b9290b813)
+++ b/target/classes/application.properties	(date 1752222949243)
@@ -1,8 +1,11 @@
 spring.application.name=turnup
-spring.datasource.url=jdbc:postgresql://localhost:5432/turnup
+spring.datasource.url=jdbc:postgresql://db.zfkiigokknuyncvlfjia.supabase.co:5432/postgres?user=postgres&password=BVCVr.x6f&bae9&
 spring.datasource.username=postgres
-spring.datasource.password=password
+spring.datasource.password=BVCVr.x6f&bae9&
+spring.datasource.driver-class-name=org.postgresql.Driver
 spring.jpa.hibernate.ddl-auto=update
+spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
+
 spring.jpa.show-sql=true
 spring.jpa.properties.hibernate.format_sql=true
 server.port=${PORT:8080}
Index: src/main/java/com/learn/turnup/TurnupApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.learn.turnup;\r\n\r\nimport com.learn.turnup.entities.AppUser;\r\nimport com.learn.turnup.entities.Lesson;\r\nimport com.learn.turnup.entities.Word;\r\nimport com.learn.turnup.repositories.AppUserRepository;\r\nimport com.learn.turnup.repositories.LessonRepository;\r\nimport com.learn.turnup.repositories.WordRepository;\r\nimport org.springframework.boot.CommandLineRunner;\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\nimport org.springframework.context.annotation.Bean;\r\n\r\nimport java.util.List;\r\n\r\n@SpringBootApplication\r\npublic class TurnupApplication {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tSpringApplication.run(TurnupApplication.class, args);\r\n\t}\r\n\t/*@Bean\r\n\tCommandLineRunner loadLessons(AppUserRepository userRepository,\r\n\t\t\t\t\t\t\t\t  LessonRepository lessonRepository,\r\n\t\t\t\t\t\t\t\t  WordRepository wordRepository) {\r\n\t\treturn args -> {\r\n\t\t\tif (lessonRepository.count() == 0 && wordRepository.count() == 0) {\r\n\t\t\t\tList<AppUser> users = userRepository.findAll();\r\n\t\t\t\tif (users.size() < 3) {\r\n\t\t\t\t\tSystem.out.println(\"Not enough users to assign lessons.\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tAppUser alice = users.get(0);\r\n\t\t\t\tAppUser bob = users.get(1);\r\n\t\t\t\tAppUser charlie = users.get(2);\r\n\r\n\t\t\t\tList<Lesson> lessons = lessonRepository.saveAll(List.of(\r\n\t\t\t\t\t\tcreateLesson(\"Basics\", \"Introductory lesson\", false, \"AJ\", alice),\r\n\t\t\t\t\t\tcreateLesson(\"Verbs\", \"Common verbs\", true,\"AJ\", alice),\r\n\t\t\t\t\t\tcreateLesson(\"Food\", \"Vocabulary about food\", false,\"AJ\", bob),\r\n\t\t\t\t\t\tcreateLesson(\"Travel\", \"Travel-related phrases\", true,\"AJ\", charlie),\r\n\t\t\t\t\t\tcreateLesson(\"Numbers\", \"Counting and numbers\", false,\"AJ\", bob)\r\n\t\t\t\t));\r\n\r\n\t\t\t\t// Generate 4 words per lesson (5 lessons × 4 = 20)\r\n\t\t\t\tint counter = 1;\r\n\t\t\t\tfor (Lesson lesson : lessons) {\r\n\t\t\t\t\tfor (int i = 0; i < 4; i++) {\r\n\t\t\t\t\t\tWord word = new Word();\r\n\t\t\t\t\t\tword.setQuestion(\"Question \" + counter);\r\n\t\t\t\t\t\tword.setAnswer(\"Answer \" + counter);\r\n\t\t\t\t\t\tword.setScore((byte) 0);\r\n\t\t\t\t\t\tword.setLesson(lesson);\r\n\t\t\t\t\t\twordRepository.save(word);\r\n\t\t\t\t\t\tcounter++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tprivate Lesson createLesson(String name, String desc, boolean shared, String language, AppUser user) {\r\n\t\tLesson lesson = new Lesson();\r\n\t\tlesson.setLessonName(name);\r\n\t\tlesson.setDescription(desc);\r\n\t\tlesson.setShared(shared);\r\n    lesson.setLanguage(language);\r\n\t\tlesson.setAppUser(user);\r\n\t\treturn lesson;\r\n\t}*/\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/learn/turnup/TurnupApplication.java b/src/main/java/com/learn/turnup/TurnupApplication.java
--- a/src/main/java/com/learn/turnup/TurnupApplication.java	(revision 25567ea48277a194712b0830e313626b9290b813)
+++ b/src/main/java/com/learn/turnup/TurnupApplication.java	(date 1752222436495)
@@ -10,6 +10,8 @@
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
 import org.springframework.context.annotation.Bean;
+import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
+import org.springframework.security.crypto.password.PasswordEncoder;
 
 import java.util.List;
 
@@ -19,54 +21,9 @@
 	public static void main(String[] args) {
 		SpringApplication.run(TurnupApplication.class, args);
 	}
-	/*@Bean
-	CommandLineRunner loadLessons(AppUserRepository userRepository,
-								  LessonRepository lessonRepository,
-								  WordRepository wordRepository) {
-		return args -> {
-			if (lessonRepository.count() == 0 && wordRepository.count() == 0) {
-				List<AppUser> users = userRepository.findAll();
-				if (users.size() < 3) {
-					System.out.println("Not enough users to assign lessons.");
-					return;
-				}
-
-				AppUser alice = users.get(0);
-				AppUser bob = users.get(1);
-				AppUser charlie = users.get(2);
-
-				List<Lesson> lessons = lessonRepository.saveAll(List.of(
-						createLesson("Basics", "Introductory lesson", false, "AJ", alice),
-						createLesson("Verbs", "Common verbs", true,"AJ", alice),
-						createLesson("Food", "Vocabulary about food", false,"AJ", bob),
-						createLesson("Travel", "Travel-related phrases", true,"AJ", charlie),
-						createLesson("Numbers", "Counting and numbers", false,"AJ", bob)
-				));
 
-				// Generate 4 words per lesson (5 lessons × 4 = 20)
-				int counter = 1;
-				for (Lesson lesson : lessons) {
-					for (int i = 0; i < 4; i++) {
-						Word word = new Word();
-						word.setQuestion("Question " + counter);
-						word.setAnswer("Answer " + counter);
-						word.setScore((byte) 0);
-						word.setLesson(lesson);
-						wordRepository.save(word);
-						counter++;
-					}
-				}
-			}
-		};
+	@Bean
+	public PasswordEncoder passwordEncoder() {
+		return new BCryptPasswordEncoder();
 	}
-
-	private Lesson createLesson(String name, String desc, boolean shared, String language, AppUser user) {
-		Lesson lesson = new Lesson();
-		lesson.setLessonName(name);
-		lesson.setDescription(desc);
-		lesson.setShared(shared);
-    lesson.setLanguage(language);
-		lesson.setAppUser(user);
-		return lesson;
-	}*/
 }
Index: src/main/java/com/learn/turnup/services/AppUserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.learn.turnup.services;\r\n\r\nimport com.learn.turnup.dto.AppUserDTO;\r\nimport com.learn.turnup.dto.LessonDTO;\r\nimport com.learn.turnup.entities.AppUser;\r\nimport com.learn.turnup.entities.Lesson;\r\nimport com.learn.turnup.exceptions.GlobalExceptions.UnauthorizedException;\r\nimport com.learn.turnup.exceptions.ValidationService;\r\nimport com.learn.turnup.mappers.LessonMapper;\r\nimport com.learn.turnup.repositories.AppUserRepository;\r\nimport com.learn.turnup.repositories.LessonRepository;\r\nimport jakarta.persistence.EntityExistsException;\r\nimport jakarta.validation.ConstraintViolation;\r\nimport jakarta.validation.ConstraintViolationException;\r\nimport jakarta.validation.Validator;\r\nimport lombok.NoArgsConstructor;\r\nimport lombok.RequiredArgsConstructor;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.util.*;\r\n\r\nimport static com.learn.turnup.exceptions.DefaultUser.denyForDefaultUser;\r\n\r\n@Service\r\n@Slf4j\r\n@RequiredArgsConstructor\r\npublic class AppUserService {\r\n    private final AppUserRepository appUserRepository;\r\n    private final LessonRepository lessonRepository;\r\n    private final LessonMapper lessonMapper;\r\n    private final ValidationService validationService;\r\n\r\n    public List<LessonDTO> getLessonsOfLoggedInUser(UUID xUserId) {\r\n        //400, 401\r\n        validationService.checkAppUserId(xUserId);\r\n\r\n      List<Lesson> userLessons = lessonRepository.findAllByAppUserId(xUserId).orElse(Collections.emptyList());\r\n      List<Lesson> sharedLessons = lessonRepository.findAllBySharedIsTrueAndAppUserIdNot(xUserId).orElse(Collections.emptyList());\r\n\r\n      List<LessonDTO> alteredSharedLessonDTOs = sharedLessons.stream()\r\n        .map(lesson -> {\r\n          LessonDTO dto = lessonMapper.toDto(lesson);\r\n          dto.setScore(-1000);\r\n          return dto;\r\n        })\r\n        .toList();\r\n\r\n      List<LessonDTO> userLessonDTOs = userLessons.stream()\r\n        .map(lessonMapper::toDto)\r\n        .toList();\r\n\r\n      List<LessonDTO> result = new ArrayList<>(userLessonDTOs);\r\n      result.addAll(alteredSharedLessonDTOs);\r\n\r\n      return result;\r\n    }\r\n\r\n    public UUID createUser(AppUserDTO appUserDTO) {\r\n        //409\r\n        if (appUserRepository.existsByAppUserName(appUserDTO.getAppUserName())) {\r\n            throw new EntityExistsException(\"User already exists\");\r\n        }\r\n\r\n        AppUser appUser = new AppUser();\r\n        appUser.setAppUserName(appUserDTO.getAppUserName());\r\n        appUser.setPasswordHash(appUserDTO.getPasswordHash());\r\n\r\n        return appUserRepository.save(appUser).getId();\r\n    }\r\n\r\n    public UUID loginUser(AppUserDTO appUserDTO) {\r\n        //401\r\n        AppUser appUser = appUserRepository.findByAppUserNameAndPasswordHash(appUserDTO.getAppUserName(), appUserDTO.getPasswordHash()).orElseThrow(\r\n                () -> new UnauthorizedException(\"User name or password mismatch\")\r\n        );\r\n\r\n        return appUser.getId();\r\n    }\r\n\r\n    public void updateUser(UUID xUserId, AppUserDTO appUserDTO) {\r\n      denyForDefaultUser(xUserId);\r\n\r\n      //400, 401\r\n        validationService.checkAppUserId(xUserId);\r\n\r\n        AppUser appUser = appUserRepository.findById(xUserId).orElse(null);\r\n\r\n        AppUser userWithSameName = appUserRepository.findByAppUserName(appUserDTO.getAppUserName()).orElse(null);\r\n\r\n        if(userWithSameName != null && !userWithSameName.getId().equals(xUserId)){\r\n            throw new EntityExistsException(\"User with same name already exists\");\r\n        }\r\n\r\n        appUser.setAppUserName(appUserDTO.getAppUserName());\r\n        appUser.setPasswordHash(appUserDTO.getPasswordHash());\r\n        appUserRepository.save(appUser);\r\n    }\r\n\r\n    public void deleteUser(UUID xUserId) {\r\n      denyForDefaultUser(xUserId);\r\n\r\n      //400, 401\r\n        validationService.checkAppUserId(xUserId);\r\n\r\n        appUserRepository.findById(xUserId).ifPresent(appUserRepository::delete);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/learn/turnup/services/AppUserService.java b/src/main/java/com/learn/turnup/services/AppUserService.java
--- a/src/main/java/com/learn/turnup/services/AppUserService.java	(revision 25567ea48277a194712b0830e313626b9290b813)
+++ b/src/main/java/com/learn/turnup/services/AppUserService.java	(date 1752222947505)
@@ -17,6 +17,7 @@
 import lombok.RequiredArgsConstructor;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.http.ResponseEntity;
+import org.springframework.security.crypto.password.PasswordEncoder;
 import org.springframework.stereotype.Service;
 
 import java.util.*;
@@ -31,6 +32,7 @@
     private final LessonRepository lessonRepository;
     private final LessonMapper lessonMapper;
     private final ValidationService validationService;
+    private final PasswordEncoder passwordEncoder;
 
     public List<LessonDTO> getLessonsOfLoggedInUser(UUID xUserId) {
         //400, 401
@@ -62,21 +64,21 @@
         if (appUserRepository.existsByAppUserName(appUserDTO.getAppUserName())) {
             throw new EntityExistsException("User already exists");
         }
+        String hashedPassword = passwordEncoder.encode(appUserDTO.getPasswordHash());
 
         AppUser appUser = new AppUser();
         appUser.setAppUserName(appUserDTO.getAppUserName());
-        appUser.setPasswordHash(appUserDTO.getPasswordHash());
+        appUser.setPasswordHash(hashedPassword);
 
         return appUserRepository.save(appUser).getId();
     }
 
     public UUID loginUser(AppUserDTO appUserDTO) {
-        //401
-        AppUser appUser = appUserRepository.findByAppUserNameAndPasswordHash(appUserDTO.getAppUserName(), appUserDTO.getPasswordHash()).orElseThrow(
-                () -> new UnauthorizedException("User name or password mismatch")
-        );
-
-        return appUser.getId();
+        return appUserRepository.findByAppUserName(appUserDTO.getAppUserName())
+                .filter(user -> passwordEncoder.matches(appUserDTO.getPasswordHash(), user.getPasswordHash()))
+                .map(AppUser::getId)
+                //401
+                .orElseThrow(() -> new UnauthorizedException("User name or password mismatch"));
     }
 
     public void updateUser(UUID xUserId, AppUserDTO appUserDTO) {
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"b32b2486-3b40-40ab-8887-2adb85d0a477\" name=\"Changes\" comment=\"set CORS config\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/application-production.properties\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/application-production.properties\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/application.properties\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/application.properties\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/generated-sources/annotations/com/learn/turnup/mappers/LessonMapperImpl.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/generated-sources/annotations/com/learn/turnup/mappers/LessonMapperImpl.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/generated-sources/annotations/com/learn/turnup/mappers/WordMapperImpl.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/generated-sources/annotations/com/learn/turnup/mappers/WordMapperImpl.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$/..\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;Pajuman&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/Pajuman/TurnUp.git&quot;,\r\n    &quot;accountId&quot;: &quot;d07d1cda-3dfe-4b18-b6bb-2b0f757c0d89&quot;\r\n  }\r\n}</component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 3\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2zdLq0syKkcZag5dlDxUKpvrZts\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"autoscrollFromSource\" value=\"true\" />\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.TurnupApplication.executor&quot;: &quot;Run&quot;,\r\n    &quot;ModuleVcsDetector.initialDetectionPerformed&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.TerminalTabsStorage.copyFrom.TerminalArrangementManager&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Já/IdeaProjects/turnup/backend&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"TurnupApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <envs>\r\n        <env name=\"SPRING_PROFILES_ACTIVE\" value=\"production\" />\r\n      </envs>\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.learn.turnup.TurnupApplication\" />\r\n      <module name=\"turnup\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.learn.turnup.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\r\n      <module name=\"backend\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\r\n      <module name=\"backend\" />\r\n      <option name=\"filePath\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.TurnupApplication\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"b32b2486-3b40-40ab-8887-2adb85d0a477\" name=\"Changes\" comment=\"\" />\r\n      <created>1752056190716</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1752056190716</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"change java 21 to 17\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1752060388528</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1752060388528</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"change java 21 to 17\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1752061260781</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1752061260781</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"application-production.properties added\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1752061945970</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1752061945970</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"debug\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1752062539972</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1752062539972</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"set temporary H2 so that deploy without DB can be made\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1752063972939</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1752063972939</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"set CORS config\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1752136710806</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1752136710806</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"7\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"change java 21 to 17\" />\r\n    <MESSAGE value=\"application-production.properties added\" />\r\n    <MESSAGE value=\"debug\" />\r\n    <MESSAGE value=\"set temporary H2 so that deploy without DB can be made\" />\r\n    <MESSAGE value=\"set CORS config\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"set CORS config\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 25567ea48277a194712b0830e313626b9290b813)
+++ b/.idea/workspace.xml	(date 1752223182235)
@@ -4,10 +4,14 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="b32b2486-3b40-40ab-8887-2adb85d0a477" name="Changes" comment="set CORS config">
+    <list default="true" id="b32b2486-3b40-40ab-8887-2adb85d0a477" name="Changes" comment="DB connection">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/application-production.properties" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/application-production.properties" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/application.properties" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/learn/turnup/TurnupApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/learn/turnup/TurnupApplication.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/learn/turnup/repositories/AppUserRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/learn/turnup/repositories/AppUserRepository.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/learn/turnup/services/AppUserService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/learn/turnup/services/AppUserService.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/application-production.properties" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/application-production.properties" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/application.properties" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/generated-sources/annotations/com/learn/turnup/mappers/LessonMapperImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/target/generated-sources/annotations/com/learn/turnup/mappers/LessonMapperImpl.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/generated-sources/annotations/com/learn/turnup/mappers/WordMapperImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/target/generated-sources/annotations/com/learn/turnup/mappers/WordMapperImpl.java" afterDir="false" />
     </list>
@@ -26,7 +30,7 @@
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$/.." value="master" />
+        <entry key="$PROJECT_DIR$/.." value="main" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
Index: target/generated-sources/annotations/com/learn/turnup/mappers/LessonMapperImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.learn.turnup.mappers;\r\n\r\nimport com.learn.turnup.dto.LessonDTO;\r\nimport com.learn.turnup.dto.NewLessonDTO;\r\nimport com.learn.turnup.entities.Lesson;\r\nimport javax.annotation.processing.Generated;\r\nimport org.springframework.stereotype.Component;\r\n\r\n@Generated(\r\n    value = \"org.mapstruct.ap.MappingProcessor\",\r\n    date = \"2025-07-11T07:49:17+0200\",\r\n    comments = \"version: 1.5.5.Final, compiler: javac, environment: Java 21.0.7 (Microsoft)\"\r\n)\r\n@Component\r\npublic class LessonMapperImpl implements LessonMapper {\r\n\r\n    @Override\r\n    public Lesson toEntity(NewLessonDTO dto) {\r\n        if ( dto == null ) {\r\n            return null;\r\n        }\r\n\r\n        Lesson lesson = new Lesson();\r\n\r\n        lesson.setLessonName( dto.getLessonName() );\r\n        lesson.setDescription( dto.getDescription() );\r\n        lesson.setShared( dto.getShared() );\r\n        lesson.setLanguage( dto.getLanguage() );\r\n\r\n        return lesson;\r\n    }\r\n\r\n    @Override\r\n    public LessonDTO toDto(Lesson dto) {\r\n        if ( dto == null ) {\r\n            return null;\r\n        }\r\n\r\n        LessonDTO lessonDTO = new LessonDTO();\r\n\r\n        lessonDTO.setId( dto.getId() );\r\n        lessonDTO.setLessonName( dto.getLessonName() );\r\n        lessonDTO.setDescription( dto.getDescription() );\r\n        lessonDTO.setShared( dto.getShared() );\r\n        lessonDTO.setLanguage( dto.getLanguage() );\r\n        lessonDTO.setScore( (int) dto.getScore() );\r\n        lessonDTO.setWordCount( dto.getWordCount() );\r\n\r\n        return lessonDTO;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/generated-sources/annotations/com/learn/turnup/mappers/LessonMapperImpl.java b/target/generated-sources/annotations/com/learn/turnup/mappers/LessonMapperImpl.java
--- a/target/generated-sources/annotations/com/learn/turnup/mappers/LessonMapperImpl.java	(revision 25567ea48277a194712b0830e313626b9290b813)
+++ b/target/generated-sources/annotations/com/learn/turnup/mappers/LessonMapperImpl.java	(date 1752222952330)
@@ -8,7 +8,7 @@
 
 @Generated(
     value = "org.mapstruct.ap.MappingProcessor",
-    date = "2025-07-11T07:49:17+0200",
+    date = "2025-07-11T10:35:52+0200",
     comments = "version: 1.5.5.Final, compiler: javac, environment: Java 21.0.7 (Microsoft)"
 )
 @Component
