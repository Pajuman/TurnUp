/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.9.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.BatchWordUpdateDTO;
import java.util.UUID;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-08-05T10:53:27.471917+02:00[Europe/Prague]", comments = "Generator version: 7.9.0")
@Validated
@Tag(name = "Word", description = "Words are lowest entities")
public interface WordsApi {

    /**
     * PUT /words : Update and/or delete words
     *
     * @param xUserId  (required)
     * @param batchWordUpdateDTO  (required)
     * @return All words successfully updated and/or deleted (status code 204)
     *         or Invalid input (status code 400)
     *         or User ID is not recognized (status code 401)
     *         or Unauthorized access to words (status code 403)
     */
    @Operation(
        operationId = "updateWords",
        summary = "Update and/or delete words",
        tags = { "Word" },
        responses = {
            @ApiResponse(responseCode = "204", description = "All words successfully updated and/or deleted"),
            @ApiResponse(responseCode = "400", description = "Invalid input"),
            @ApiResponse(responseCode = "401", description = "User ID is not recognized"),
            @ApiResponse(responseCode = "403", description = "Unauthorized access to words")
        }
    )
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/words",
        consumes = { "application/json" }
    )
    
    ResponseEntity<Void> updateWords(
        @NotNull @Parameter(name = "X-User-Id", description = "", required = true, in = ParameterIn.HEADER) @RequestHeader(value = "X-User-Id", required = true) UUID xUserId,
        @Parameter(name = "BatchWordUpdateDTO", description = "", required = true) @Valid @RequestBody BatchWordUpdateDTO batchWordUpdateDTO
    );

}
